# todo

Functionality supported:

* Clock synchronization -- sync time between host and target
* CSV logging:

The name of the CSV file will come from the model number ('GETVER') and the serial number ('GETSERIAL')
Query battery voltage ('GETVOLT'), Gyroscope data ('GETGYRO'), Counts per second ('GETCPS') repeatedly, with a one second delay. CSV columns will be:

Timestamp (epoch), Timestamp (human), CPM, battery voltage, gyroscope

Gyroscope coordinates


# config

Serial port settings

```
port is        : /dev/ttyUSB0
flowcontrol    : none
baudrate is    : 115200
parity is      : none
databits are   : 8
stopbits are   : 1
escape is      : C-a
local echo is  : no
noinit is      : no
noreset is     : no
hangup is      : no
nolock is      : no
send_cmd is    : sz -vv
receive_cmd is : rz -vv -E
imap is        : spchex,tabhex,crhex,lfhex,8bithex,nrmhex,
omap is        : 
emap is        : crcrlf,delbs,
logfile is     : none
initstring     : none
exit_after is  : not set
exit is        : no
```

To connect to serial port:

```bash
$ sudo picocom --baud 115200 --parity n --flow n
```

Then to write commands, from another terminal, do:

```bash
$ echo -ne '<GETSERIAL>>' > /dev/ttyUSB0
```

On my device, returns: 61814ï¿½

or as raw bytes: [36][01][31][38][31][34][b8]
Convert this to ascii to get result

On the actual device screen (About -> Serial Number), I see:

57 61 48 48 36 35
36 01 31 38 31 34

# gyro

Gyro data from standing up: 254, 176, 62, 208, 4, 176, 170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

Gyro data from lying down: 0, 64, 255, 144, 191, 48, 170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0